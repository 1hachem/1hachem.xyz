---
import "@/styles/global.css";
import "@fontsource-variable/jetbrains-mono";
import { ClientRouter } from "astro:transitions";

import { SITE } from "@/consts";

import Footer from "@/components/Footer.astro";
import ClickSpark from "@/components/ClickSpark";
import Navbar from "@/components/NavBar.astro";

interface Props {
  title?: string;
  description?: string;
  ogImage?: string;
  pubDatetime?: Date;
  modDatetime?: Date;
  canonicalURL?: string;
}

const {
  title = SITE.title,
  description = SITE.description,
  ogImage = "/og.png",
  pubDatetime,
  modDatetime,
  canonicalURL = SITE.url,
} = Astro.props;

const socialImageURL = new URL(ogImage, Astro.url);

const structuredData = {
  "@context": "https://schema.org",
  "@type": "BlogPosting",
  headline: `${title}`,
  image: `${socialImageURL}`,
  datePublished: `${pubDatetime?.toISOString()}`,
  ...(modDatetime && { dateModified: modDatetime.toISOString() }),
  author: [
    {
      "@type": "Person",
      name: SITE.author,
      url: SITE.url,
    },
  ],
};
---

<html>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/png" href="/favicon.png" />
    <link rel="canonical" href={canonicalURL} />
    <meta name="generator" content={Astro.generator} />
    <link rel="sitemap" href="/sitemap-index.xml" />

    <title>{title}</title>
    <meta name="title" content={title} />
    <meta name="description" content={description} />
    <meta name="author" content={SITE.author} />

    <!-- General Meta Tags -->
    <link rel="sitemap" href="/sitemap-index.xml" />

    <!-- Open Graph / Facebook -->
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:url" content={canonicalURL} />
    <meta property="og:image" content={socialImageURL} />

    <!-- Article Published/Modified time -->
    {
      pubDatetime && (
        <meta
          property="article:published_time"
          content={pubDatetime.toISOString()}
        />
      )
    }
    {
      modDatetime && (
        <meta
          property="article:modified_time"
          content={modDatetime.toISOString()}
        />
      )
    }

    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={canonicalURL} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={socialImageURL} />

    <!-- Google JSON-LD Structured data -->
    <script
      type="application/ld+json"
      is:inline
      set:html={JSON.stringify(structuredData)}
    />

    <ClientRouter />
  </head>
  <body
    class="flex min-h-screen flex-col bg-background font-jet font-bold text-white"
  >
    <ClickSpark
      sparkColor="#DAE3E5"
      sparkSize={10}
      sparkRadius={15}
      sparkCount={5}
      duration={300}
      client:only
    >
      <div class="flex min-h-screen flex-col justify-between">
        <nav class="absolute left-6 top-6"><a href="/">1hachem.xyz</a></nav>
        <div class="mt-20 items-center">
          <slot />
        </div>
        <Footer transition:persist />
      </div>
    </ClickSpark>
  </body>
</html>
